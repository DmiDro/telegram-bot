from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from pytz import timezone
import datetime
import logging

from utils.gpt import generate_daily_recommendation
from db.write import get_subscribed_users
from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def setup_scheduler(bot: Bot):
    logging.info("üü° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")

    scheduler = AsyncIOScheduler(timezone=timezone("Europe/Moscow"))

    @scheduler.scheduled_job(CronTrigger(hour=11, minute=15))  # –ø–æ –ú–æ—Å–∫–≤–µ
    async def send_recommendations():
        now = datetime.datetime.now(timezone("Europe/Moscow")).strftime("%Y-%m-%d %H:%M:%S")
        logging.info(f"üöÄ –ó–ê–î–ê–ù–ò–ï –í–´–ü–û–õ–ù–Ø–ï–¢–°–Ø! –í—Ä–µ–º—è (–ú–°–ö): {now}")

        users = await get_subscribed_users()
        logging.info(f"üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {len(users)}")

        for user_id in users:
            try:
                logging.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {user_id}")
                recommendation = await generate_daily_recommendation(user_id)

                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text="üëç", callback_data="feedback_like"),
                        InlineKeyboardButton(text="üëé", callback_data="feedback_dislike"),
                    ]
                ])

                await bot.send_message(
                    user_id,
                    recommendation,
                    parse_mode="HTML",
                    disable_web_page_preview=True,
                    reply_markup=keyboard
                )

                logging.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

            except Exception as e:
                logging.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    scheduler.start()
    logging.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω (–ú–°–ö 11:15)")
