import asyncio
import os
import logging
from aiohttp_socks import open_connection

logging.basicConfig(level=logging.INFO, format="%(asctime)s | %(levelname)s | %(message)s")

PROXY_URL = os.getenv("OPENAI_PROXY")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

async def main():
    logging.info(f"üîå –ü—Ä–æ–∫—Å–∏: {PROXY_URL}")

    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SOCKS5 –ø—Ä–æ–∫—Å–∏
        reader, writer = await open_connection(
            proxy_url=PROXY_URL,
            host='tcpbin.com',  # –ø—É–±–ª–∏—á–Ω—ã–π echo-—Å–µ—Ä–≤–µ—Ä
            port=4242
        )
        logging.info("üì° –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç
        message = "–ø—Ä–∏–≤–µ—Ç\n"
        writer.write(message.encode())
        await writer.drain()

        logging.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message.strip()}")

        # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
        data = await reader.readline()
        logging.info(f"üì• –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {data.decode().strip()}")

        writer.close()
        await writer.wait_closed()

    except Exception as e:
        logging.exception("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:")

if __name__ == "__main__":
    asyncio.run(main())
