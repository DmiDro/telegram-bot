import os
import logging
import asyncio
from openai import OpenAI, AsyncOpenAI
from openai._types import NotGiven

# üîê –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –∫–ª—é—á –±—É–¥–µ—Ç –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ä–µ–¥—ã –≤ Railway
OPENAI_API_KEY = os.environ["OPENAI_API_KEY"]  # Railway ‚Üí Set in Variables
OPENAI_PROXY = os.environ.get("OPENAI_PROXY")  # Proxy (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω)

# –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (fallback)
sync_client = OpenAI(
    api_key=OPENAI_API_KEY,
    base_url="https://api.openai.com/v1",
    proxies={"http": OPENAI_PROXY, "https": OPENAI_PROXY} if OPENAI_PROXY else None
)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç (–æ—Å–Ω–æ–≤–Ω–æ–π)
async_client = AsyncOpenAI(
    api_key=OPENAI_API_KEY,
    base_url="https://api.openai.com/v1",
    http_client=AsyncOpenAI.HTTPClient(
        proxy=OPENAI_PROXY if OPENAI_PROXY else NotGiven()
    )
)

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ—Ç async, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî fallback –Ω–∞ sync
async def generate_response(prompt: str, model: str = "gpt-4o") -> str:
    try:
        response = await async_client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt.strip()}]
        )
        return response.choices[0].message.content.strip()

    except Exception as e_async:
        logging.error(f"‚ö†Ô∏è AsyncOpenAI –æ—à–∏–±–∫–∞: {e_async}. –ü—Ä–æ–±—É–µ–º fallback —á–µ—Ä–µ–∑ sync.")

        try:
            loop = asyncio.get_running_loop()
            response = await loop.run_in_executor(
                None,
                lambda: sync_client.chat.completions.create(
                    model=model,
                    messages=[{"role": "user", "content": prompt.strip()}]
                )
            )
            return response.choices[0].message.content.strip()

        except Exception as e_sync:
            logging.critical(f"‚ùå Fallback (sync) —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e_sync}")
            return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç OpenAI."
