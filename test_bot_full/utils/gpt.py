import random
import logging
from db import get_hero_list  # üëà —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ–µ–≤ –∏–∑ –ë–î

async def generate_daily_recommendation(user_id: str, archetype: str = "", maturity: str = "", socionics: str = "") -> str:
    logging.info(f"üöÄ [gpt] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–∞–Ω–∏—è –¥–ª—è user_id: {user_id}")
    
    heroes = await get_hero_list()
    if not heroes:
        logging.warning("‚ö†Ô∏è [gpt] –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ë–î")
        return "‚ö†Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    logging.info(f"‚úÖ [gpt] –ó–∞–≥—Ä—É–∑–∏–ª–∏ {len(heroes)} –≥–µ—Ä–æ–µ–≤ –∏–∑ –±–∞–∑—ã.")

    char = random.choice(heroes)
    name = char["name"]
    description = char["description"]
    link = char.get("link", "")

    signature_html = f'<a href="{link}">{name}</a>' if link else name

    # üìå –ó–∞–≥–ª—É—à–∫–∞ –±–µ–∑ –≤—ã–∑–æ–≤–∞ OpenAI
    advice = "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–≤–æ–µ–≥–æ –≤–∑–≥–ª—è–¥–∞ –Ω–∞ –Ω–µ–≥–æ. –î–µ–ª–∞–π –≤—ã–±–æ—Ä ‚Äî –æ–Ω —Ç–≤–æ–π."

    logging.info("üñçÔ∏è [gpt] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–∞.")

    return (
        f"üïä <b>–ü–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n\n"
        f"{advice}\n\n"
        f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º, {signature_html}\n"
        f"<i>{description}</i>"
    )
