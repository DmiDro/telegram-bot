import os
import logging
import asyncio

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage

from handlers import commands, start, questions, unsubscribe
from handlers.results.results_main import router as results_router
from handlers.feedback import router as feedback_router
from schedule.sender import setup_scheduler  # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫

print("üêç main.py —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω ‚Äî Railway –∏—Å–ø–æ–ª–Ω—è–µ—Ç —ç—Ç–æ—Ç —Ñ–∞–π–ª.")

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ ===
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s"
)

# === –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—á–µ—Ä–µ–∑ Railway Variables) ===
TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")

if not TELEGRAM_BOT_TOKEN:
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ===
bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher(storage=MemoryStorage())

# === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ ===
dp.include_routers(
    commands.router,
    start.router,
    questions.router,
    unsubscribe.router,
    results_router,
    feedback_router,
)

# === –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
async def main():
    logging.info("‚è≥ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    try:
        setup_scheduler(bot)
        logging.info("üü¢ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")

    try:
        await bot.delete_webhook(drop_pending_updates=True)
        logging.info("‚úÖ Webhook —É–¥–∞–ª—ë–Ω. –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ polling.")
        await dp.start_polling(bot)
    except Exception as e:
        logging.critical(f"üö® –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ polling: {e}")

if __name__ == "__main__":
    asyncio.run(main())
